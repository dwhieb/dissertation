mod      = data$mod_rel,
language = data$language
)
plot_rel_freq <- ggtern(
rel_freq,
aes(
x = ref,
y = pred,
z = mod
)
) +
labs(
title = "Relative Frequency"
) +
Tlab("predication") +
Llab("reference") +
Rlab("modification") +
theme_minimal() +
theme(
strip.text.y        = element_blank(),
plot.margin         = unit(c(0.5, 0, 0.5, 0.5), "cm"),
plot.title.position = "plot",
plot.title          = element_text(hjust = 0.5),
tern.axis.title.R   = element_text(hjust = 1.25),
tern.axis.title.L   = element_text(hjust = -0.25)
) +
theme_hidelabels() +
tern_limits(T = 1.05, L = 1.05, R = 1.05) +
geom_polygon(
data = data.frame(
ref  = c(1, 0, 0),
pred = c(0, 1, 0),
mod  = c(0, 0, 1)
),
alpha = 0,
color = "#BBBBBB",
size  = 0.5
) +
geom_point(
aes(color = language),
show.legend = FALSE
) +
facet_grid(
rows = vars(language)
)
plot_dispersion <- ggtern(
dispersion,
aes(
x = ref,
y = pred,
z = mod
),
color = language
) +
labs(
title = "Dispersion"
) +
Tlab("predication") +
Llab("reference") +
Rlab("modification") +
theme_minimal() +
theme(
plot.title.position = "plot",
plot.title          = element_text(hjust = 0.5),
tern.axis.title.R   = element_text(hjust = 1.25),
tern.axis.title.L   = element_text(hjust = -0.25)
) +
theme_hidelabels() +
tern_limits(T = 1.05, L = 1.05, R = 1.05) +
geom_polygon(
data = data.frame(
ref  = c(1, 0, 0),
pred = c(0, 1, 0),
mod  = c(0, 0, 1)
),
alpha = 0,
color = "#BBBBBB",
size  = 0.5
) +
geom_point(
aes(color = language),
show.legend = FALSE
) +
facet_grid(
rows = vars(language)
)
grid <- ggtern::grid.arrange(
plot_rel_freq,
plot_dispersion,
ncol = 2,
nrow = 1
)
grid
ggsave(
"stats/figures/functions/rel_freq_vs_dispersion/100.png",
grid,
height = 10,
width = 10,
)
library(ggtern)
source("stats/scripts/load_100.R")
source("stats/scripts/plot_triangle.R")
data <- load_all()
dispersion <- data.frame(
ref      = 1 - data$dispersion_ref,
pred     = 1 - data$dispersion_pred,
mod      = 1 - data$dispersion_mod,
language = data$language
)
rel_freq <- data.frame(
ref      = data$ref_rel,
pred     = data$pred_rel,
mod      = data$mod_rel,
language = data$language
)
plot_rel_freq <- ggtern(
rel_freq,
aes(
x = ref,
y = pred,
z = mod
)
) +
labs(
title = "Relative Frequency"
) +
Tlab("predication") +
Llab("reference") +
Rlab("modification") +
theme_minimal() +
theme(
strip.text.y        = element_blank(),
plot.margin         = unit(c(0, 0, 0, 0), "cm"),
plot.title.position = "plot",
plot.title          = element_text(hjust = 0.5),
tern.axis.title.R   = element_text(hjust = 1.25),
tern.axis.title.L   = element_text(hjust = -0.25)
) +
theme_hidelabels() +
tern_limits(T = 1.05, L = 1.05, R = 1.05) +
geom_polygon(
data = data.frame(
ref  = c(1, 0, 0),
pred = c(0, 1, 0),
mod  = c(0, 0, 1)
),
alpha = 0,
color = "#BBBBBB",
size  = 0.5
) +
geom_point(
aes(color = language),
show.legend = FALSE
) +
facet_grid(
rows = vars(language)
)
plot_dispersion <- ggtern(
dispersion,
aes(
x = ref,
y = pred,
z = mod
),
color = language
) +
labs(
title = "Dispersion"
) +
Tlab("predication") +
Llab("reference") +
Rlab("modification") +
theme_minimal() +
theme(
plot.title.position = "plot",
plot.title          = element_text(hjust = 0.5),
tern.axis.title.R   = element_text(hjust = 1.25),
tern.axis.title.L   = element_text(hjust = -0.25)
) +
theme_hidelabels() +
tern_limits(T = 1.05, L = 1.05, R = 1.05) +
geom_polygon(
data = data.frame(
ref  = c(1, 0, 0),
pred = c(0, 1, 0),
mod  = c(0, 0, 1)
),
alpha = 0,
color = "#BBBBBB",
size  = 0.5
) +
geom_point(
aes(color = language),
show.legend = FALSE
) +
facet_grid(
rows = vars(language)
)
grid <- ggtern::grid.arrange(
plot_rel_freq,
plot_dispersion,
ncol = 2,
nrow = 1
)
grid
ggsave(
"stats/figures/functions/rel_freq_vs_dispersion/100.png",
grid,
height = 10,
width = 10,
)
library(ggtern)
source("stats/scripts/load_100.R")
source("stats/scripts/plot_triangle.R")
data <- load_all()
dispersion <- data.frame(
ref      = 1 - data$dispersion_ref,
pred     = 1 - data$dispersion_pred,
mod      = 1 - data$dispersion_mod,
language = data$language
)
rel_freq <- data.frame(
ref      = data$ref_rel,
pred     = data$pred_rel,
mod      = data$mod_rel,
language = data$language
)
plot_rel_freq <- ggtern(
rel_freq,
aes(
x = ref,
y = pred,
z = mod
)
) +
labs(
title = "Relative Frequency"
) +
Tlab("predication") +
Llab("reference") +
Rlab("modification") +
theme_minimal() +
theme(
strip.text.y        = element_blank(),
plot.title.position = "plot",
plot.title          = element_text(hjust = 0.5),
tern.axis.title.R   = element_text(hjust = 1.25),
tern.axis.title.L   = element_text(hjust = -0.25)
) +
theme_hidelabels() +
tern_limits(T = 1.05, L = 1.05, R = 1.05) +
geom_polygon(
data = data.frame(
ref  = c(1, 0, 0),
pred = c(0, 1, 0),
mod  = c(0, 0, 1)
),
alpha = 0,
color = "#BBBBBB",
size  = 0.5
) +
geom_point(
aes(color = language),
show.legend = FALSE
) +
facet_grid(
rows = vars(language)
)
plot_dispersion <- ggtern(
dispersion,
aes(
x = ref,
y = pred,
z = mod
),
color = language
) +
labs(
title = "Dispersion"
) +
Tlab("predication") +
Llab("reference") +
Rlab("modification") +
theme_minimal() +
theme(
plot.title.position = "plot",
plot.title          = element_text(hjust = 0.5),
tern.axis.title.R   = element_text(hjust = 1.25),
tern.axis.title.L   = element_text(hjust = -0.25)
) +
theme_hidelabels() +
tern_limits(T = 1.05, L = 1.05, R = 1.05) +
geom_polygon(
data = data.frame(
ref  = c(1, 0, 0),
pred = c(0, 1, 0),
mod  = c(0, 0, 1)
),
alpha = 0,
color = "#BBBBBB",
size  = 0.5
) +
geom_point(
aes(color = language),
show.legend = FALSE
) +
facet_grid(
rows = vars(language)
)
grid <- ggtern::grid.arrange(
plot_rel_freq,
plot_dispersion,
ncol = 2,
nrow = 1
)
grid
ggsave(
"stats/figures/functions/rel_freq_vs_dispersion/100.png",
grid,
height = 10,
width = 10,
)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
for (i in 1:1) {
runif(1)
}
for (i in 1:1) {
print(runif(1))
}
for (i in 1:1) {
print(runif(1))
}
for (i in 1:1) {
print(runif(1))
}
for (i in 1:1) {
print(runif(1))
}
values <- runif(100)
bins <- bin(values)
for (i in 1:1) {
print(runif(1))
}
values <- runif(100)
bins   <- cut(values)
for (i in 1:1) {
print(runif(1))
}
values <- runif(100)
bins   <- cut(values, breaks = 3)
for (i in 1:1) {
print(runif(1))
}
values <- runif(100)
bins   <- cut(values, breaks = 3)
bins
for (i in 1:1) {
print(runif(1))
}
values <- runif(100)
bins   <- cut(values, breaks = 3, labels = c("ref", "pred", "mod"))
for (i in 1:1) {
print(runif(1))
}
values <- runif(100)
bins   <- cut(values, breaks = 3, labels = c("ref", "pred", "mod"))
bins
data <- data.frame(
ref = c(),
pred = c(),
mod = c()
)
for (i in 1:1) {
values <- runif(100)
observations <- cut(
values,
breaks = 3,
labels = c("ref", "pred", "mod")
)
}
View(data)
data <- data.frame(
ref  = c(),
pred = c(),
mod  = c(),
freq = c(1)
)
for (i in 1:1) {
values <- runif(100)
observations <- cut(
values,
breaks = 3,
labels = c("ref", "pred", "mod")
)
table(observations)
}
data <- data.frame(
ref  = c(),
pred = c(),
mod  = c(),
freq = c()
)
for (i in 1:1) {
values <- runif(100)
observations <- cut(
values,
breaks = 3,
labels = c("ref", "pred", "mod")
)
table(observations)
}
data <- data.frame(
ref  = c(),
pred = c(),
mod  = c(),
freq = c()
)
for (i in 1:1) {
values <- runif(100)
observations <- cut(
values,
breaks = 3,
labels = c("ref", "pred", "mod")
)
t <- table(observations)
t
}
data <- data.frame(
ref  = c(),
pred = c(),
mod  = c(),
freq = c()
)
for (i in 1:1) {
values <- runif(100)
observations <- cut(
values,
breaks = 3,
labels = c("ref", "pred", "mod")
)
t <- table(observations)
print(t)
}
data <- data.frame(
ref  = c(),
pred = c(),
mod  = c(),
freq = c()
)
for (i in 1:1) {
values <- runif(100)
observations <- cut(
values,
breaks = 3,
labels = c("ref", "pred", "mod")
)
t <- table(observations)
t$freq <- i
}
data <- data.frame(
ref  = c(),
pred = c(),
mod  = c(),
freq = c()
)
for (i in 1:1) {
values <- runif(100)
observations <- cut(
values,
breaks = 3,
labels = c("ref", "pred", "mod")
)
t <- data.frame(table(observations))
t$freq <- i
}
View(t)
data <- data.frame(
ref  = c(),
pred = c(),
mod  = c(),
freq = c()
)
for (i in 1:1) {
values <- runif(100)
observations <- cut(
values,
breaks = 3,
labels = c("ref", "pred", "mod")
)
t <- transpose(data.frame(table(observations)))
t$freq <- i
}
data <- data.frame(
ref  = c(),
pred = c(),
mod  = c(),
freq = c()
)
for (i in 1:1) {
values <- runif(100)
observations <- cut(
values,
breaks = 3,
labels = c("ref", "pred", "mod")
)
t <- data.table(observations)
print(t)
}
