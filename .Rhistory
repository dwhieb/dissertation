library(ggplot2)
data_path <- "stats/data/Nuuchahnulth_roots.tsv"
data      <- load_data(data_path)
bin_width <- 0.05 # results in 20 bins
histogram <- ggplot(data, aes(x = flexibility)) +
labs(
title = "Distribution of Flexibility Ratings of Nuuchahnulth Roots"
) +
theme(
axis.text.x  = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin  = margin(0.5, 0.5, 0, 0.5, "cm"),
) +
geom_histogram(
binwidth = bin_width,
color    = "black",
fill     = "white"
)
grid <- plot_grid(
histogram
)
grid
ggsave(
"stats/figures/roots/flexibility.png",
grid
)
source("stats/scripts/load_data.R")
library(cowplot)
library(ggplot2)
data_path <- "stats/data/Nuuchahnulth_roots.tsv"
data      <- load_data(data_path)
data      <- data[which(data$flexibility > 0), ]
bin_width <- 0.05 # results in 20 bins
histogram <- ggplot(data, aes(x = flexibility)) +
labs(
title = "Distribution of Flexibility Ratings of Nuuchahnulth Roots"
) +
theme(
axis.text.x  = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin  = margin(0.5, 0.5, 0, 0.5, "cm"),
) +
geom_histogram(
binwidth = bin_width,
color    = "black",
fill     = "white"
)
grid <- plot_grid(
histogram
)
grid
ggsave(
"stats/figures/roots/flexibility.png",
grid
)
source("stats/scripts/load_data.R")
library(cowplot)
library(ggplot2)
data_path <- "stats/data/Nuuchahnulth_roots.tsv"
data      <- load_data(data_path)
data      <- data[which(data$frequency > 20), ]
bin_width <- 0.05 # results in 20 bins
histogram <- ggplot(data, aes(x = flexibility)) +
labs(
title = "Distribution of Flexibility Ratings of Nuuchahnulth Roots"
) +
theme(
axis.text.x  = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin  = margin(0.5, 0.5, 0, 0.5, "cm"),
) +
geom_histogram(
binwidth = bin_width,
color    = "black",
fill     = "white"
)
grid <- plot_grid(
histogram
)
grid
ggsave(
"stats/figures/roots/flexibility.png",
grid
)
source("stats/scripts/load_data.R")
library(cowplot)
library(ggplot2)
data_path <- "stats/data/Nuuchahnulth_roots.tsv"
data      <- load_data(data_path)
data      <- data[which(data$frequency > 20 & data$flexibility > 0), ]
bin_width <- 0.05 # results in 20 bins
histogram <- ggplot(data, aes(x = flexibility)) +
labs(
title = "Distribution of Flexibility Ratings of Nuuchahnulth Roots"
) +
theme(
axis.text.x  = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin  = margin(0.5, 0.5, 0, 0.5, "cm"),
) +
geom_histogram(
binwidth = bin_width,
color    = "black",
fill     = "white"
)
grid <- plot_grid(
histogram
)
grid
ggsave(
"stats/figures/roots/flexibility.png",
grid
)
source("stats/scripts/load_data.R")
library(cowplot)
library(ggplot2)
data_path <- "stats/data/Nuuchahnulth_roots.tsv"
data      <- load_data(data_path)
bin_width <- 0.05 # results in 20 bins
histogram <- ggplot(data, aes(x = flexibility)) +
labs(
title = "Distribution of Flexibility Ratings of Nuuchahnulth Roots"
) +
theme(
axis.text.x  = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin  = margin(0.5, 0.5, 0, 0.5, "cm"),
) +
geom_histogram(
binwidth = bin_width,
color    = "black",
fill     = "white"
) +
xlim(0, 1)
grid <- plot_grid(
histogram
)
grid
ggsave(
"stats/figures/roots/flexibility.png",
grid
)
source("stats/scripts/load_data.R")
library(cowplot)
library(ggplot2)
data_path <- "stats/data/Nuuchahnulth_roots.tsv"
data      <- load_data(data_path)
bin_width <- 0.05 # results in 20 bins
histogram <- ggplot(data, aes(x = flexibility)) +
labs(
title = "Distribution of Flexibility Ratings of Nuuchahnulth Roots"
) +
theme(
axis.text.x  = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin  = margin(0.5, 0.5, 0, 0.5, "cm"),
) +
geom_histogram(
binwidth = bin_width,
color    = "black",
fill     = "white"
) +
xlim(0, 1) +
ylim(0, 50)
grid <- plot_grid(
histogram
)
grid
ggsave(
"stats/figures/roots/flexibility.png",
grid
)
source("stats/scripts/load_data.R")
library(ggplot2)
data_path <- "stats/data/Nuuchahnulth_roots.tsv"
data      <- load_data(data_path)
plot <- ggplot(data, aes(x = flexibility, y = dispersion))
plot
ggsave(
"stats/figures/roots/dispersion_vs_flexibility.png",
plot
)
source("stats/scripts/load_data.R")
library(ggplot2)
data_path <- "stats/data/Nuuchahnulth_roots.tsv"
data      <- load_data(data_path)
plot <- ggplot(data, aes(x = flexibility, y = dispersion)) +
labs(
title = "Dispersion vs. Flexibility for Nuuchahnulth Roots",
x     = "flexibility",
y     = "dispersion (DP)"
) +
theme_minimal() +
geom_point(
size = 1
) +
xlim(0, 1) +
ylim(0, 1)
plot
ggsave(
"stats/figures/roots/dispersion_vs_flexibility.png",
plot
)
source("stats/scripts/load_data.R")
library(ggplot2)
data_path <- "stats/data/Nuuchahnulth_roots.tsv"
data      <- load_data(data_path)
plot <- ggplot(data, aes(x = flexibility, y = dispersion)) +
labs(
title = "Dispersion vs. Flexibility for Nuuchahnulth Roots",
x     = "flexibility"
) +
ylab("dispersion") +
theme_minimal() +
geom_point(
size = 1
) +
xlim(0, 1) +
ylim(0, 1)
plot
ggsave(
"stats/figures/roots/dispersion_vs_flexibility.png",
plot
)
source("stats/scripts/load_data.R")
library(ggplot2)
data_path <- "stats/data/Nuuchahnulth_roots.tsv"
data      <- load_data(data_path)
plot <- ggplot(data, aes(x = flexibility, y = dispersion)) +
labs(
title = "Dispersion vs. Flexibility for Nuuchahnulth Roots",
x     = "flexibility",
y     = "dispersion (DP)"
) +
theme_minimal() +
geom_point(
size = 1
) +
xlim(0, 1) +
ylim(0, 1)
plot
ggsave(
"stats/figures/roots/dispersion_vs_flexibility.png",
plot
)
source("stats/scripts/load_data.R")
# flexibility rating: strict vs. broad
# compare: means, distributions
# Q: Do the means of the strict vs. broad samples of English differ?
# H0: The means do not differ.
# H1: The means differ.
# Test: t-test
# Preliminaries
data <- load_data("stats/data/English.tsv")
source("stats/scripts/load_data.R")
# flexibility rating: strict vs. broad
# compare: means, distributions
# Q: Do the means of the strict vs. broad samples of English differ?
# H0: The means do not differ.
# H1: The means differ.
# Test: t-test
# Preliminaries
data <- load_data("stats/data/English.tsv")
mean(data$flexibility)
mean(data$flexibility_broad)
source("stats/scripts/load_data.R")
# flexibility rating: strict vs. broad
# compare: means, distributions
# Q: Do the means of the strict vs. broad samples of English differ?
# H0: The means do not differ.
# H1: The means differ.
# Test: t-test
# Preliminaries
data <- load_data("stats/data/English.tsv")
mean(data$flexibility)       # 0.2230745
mean(data$flexibility_broad) # 0.3335356
sd(data$flexibility)
sd(data$flexibility_broad)
source("stats/scripts/load_data.R")
# flexibility rating: strict vs. broad
# compare: means, distributions
# Q: Do the means of the strict vs. broad samples of English differ?
# H0: The means do not differ.
# H1: The means differ.
# Test: t-test
# Preliminaries
data <- load_data("stats/data/English.tsv")
mean(data$flexibility)       # 0.2230745
mean(data$flexibility_broad) # 0.3335356
sd(data$flexibility)       # 0.2306626
sd(data$flexibility_broad) # 0.2727678
boxplot(data$flexibility, data$flexibility_broad)
source("stats/scripts/load_data.R")
# flexibility rating: strict vs. broad
# compare: means, distributions
# Q: Do the means of the strict vs. broad samples of English differ?
# H0: The means do not differ.
# H1: The means differ.
# Test: t-test
# Preliminaries
data <- load_data("stats/data/English.tsv")
mean(data$flexibility)       # 0.2230745
mean(data$flexibility_broad) # 0.3335356
sd(data$flexibility)       # 0.2306626
sd(data$flexibility_broad) # 0.2727678
boxplot(
data$flexibility,
data$flexibility_broad,
notch = TRUE
)
source("stats/scripts/load_data.R")
# flexibility rating: strict vs. broad
# compare: means, distributions
# Q: Do the means of the strict vs. broad samples of English differ?
# H0: The means do not differ.
# H1: The means differ.
# Test: t-test
# Preliminaries
data <- load_data("stats/data/English.tsv")
mean(data$flexibility)       # 0.2230745
mean(data$flexibility_broad) # 0.3335356
sd(data$flexibility)       # 0.2306626
sd(data$flexibility_broad) # 0.2727678
boxplot(
data$flexibility,
data$flexibility_broad,
main  = "English flexibility: strict vs. broad"
notch = TRUE,
ylab  = "flexibility"
)
source("stats/scripts/load_data.R")
# flexibility rating: strict vs. broad
# compare: means, distributions
# Q: Do the means of the strict vs. broad samples of English differ?
# H0: The means do not differ.
# H1: The means differ.
# Test: t-test
# Preliminaries
data <- load_data("stats/data/English.tsv")
mean(data$flexibility)       # 0.2230745
mean(data$flexibility_broad) # 0.3335356
sd(data$flexibility)       # 0.2306626
sd(data$flexibility_broad) # 0.2727678
boxplot(
data$flexibility,
data$flexibility_broad,
main  = "English flexibility: strict vs. broad",
notch = TRUE,
ylab  = "flexibility"
)
source("stats/scripts/load_data.R")
# flexibility rating: strict vs. broad
# compare: means, distributions
# Q: Do the means of the strict vs. broad samples of English differ?
# H0: The means do not differ.
# H1: The means differ.
# Test: t-test
# Preliminaries
data <- load_data("stats/data/English.tsv")
mean(data$flexibility)       # 0.2230745
mean(data$flexibility_broad) # 0.3335356
sd(data$flexibility)       # 0.2306626
sd(data$flexibility_broad) # 0.2727678
boxplot(
data$flexibility,
data$flexibility_broad,
main  = "English flexibility: strict vs. broad",
notch = TRUE,
ylab  = "flexibility"
)
grid()
source("stats/scripts/load_data.R")
# flexibility rating: strict vs. broad
# compare: means, distributions
# Q: Do the means of the strict vs. broad samples of English differ?
# H0: The means do not differ.
# H1: The means differ.
# Test: t-test
# Preliminaries
data <- load_data("stats/data/English.tsv")
mean(data$flexibility)       # 0.2230745
mean(data$flexibility_broad) # 0.3335356
sd(data$flexibility)       # 0.2306626
sd(data$flexibility_broad) # 0.2727678
boxplot(
data$flexibility,
data$flexibility_broad,
main  = "English flexibility: strict vs. broad",
notch = TRUE,
ylab  = "flexibility"
)
grid()
rug(data$flexibility, side = "l")
source("stats/scripts/load_data.R")
# flexibility rating: strict vs. broad
# compare: means, distributions
# Q: Do the means of the strict vs. broad samples of English differ?
# H0: The means do not differ.
# H1: The means differ.
# Test: t-test
# Preliminaries
data <- load_data("stats/data/English.tsv")
mean(data$flexibility)       # 0.2230745
mean(data$flexibility_broad) # 0.3335356
sd(data$flexibility)       # 0.2306626
sd(data$flexibility_broad) # 0.2727678
boxplot(
data$flexibility,
data$flexibility_broad,
main  = "English flexibility: strict vs. broad",
notch = TRUE,
ylab  = "flexibility"
)
grid()
rug(data$flexibility, side = 2)
source("stats/scripts/load_data.R")
# flexibility rating: strict vs. broad
# compare: means, distributions
# Q: Do the means of the strict vs. broad samples of English differ?
# H0: The means do not differ.
# H1: The means differ.
# Test: t-test
# Preliminaries
data <- load_data("stats/data/English.tsv")
mean(data$flexibility)       # 0.2230745
mean(data$flexibility_broad) # 0.3335356
sd(data$flexibility)       # 0.2306626
sd(data$flexibility_broad) # 0.2727678
boxplot(
data$flexibility,
data$flexibility_broad,
main  = "English flexibility: strict vs. broad",
notch = TRUE,
ylab  = "flexibility"
)
grid()
rug(data$flexibility, side = 2)
rug(data$flexibility_broad, side = 4)
shapiro.test(data$flexibility)
shapiro.test(data$flexibility_broad)
fligner.test(data$flexibility)
fligner.test(data$flexibility, data$flexibility_broad)
IQR(data$flexibility)
IQR(data$flexibility_broad)
ks.test(data$flexibility, data$flexibility_broad)
# Use wilcox.test to run the U-test
wilcox.test(
data$flexibility,
data$flexibility_broad,
paired = FALSE
)
rm(list=ls(all.names=TRUE))
mnt <- function (obs.freqs, exp.percs) {
require(combinat)
cst <- function(obs.freqs, exp.percs) {
exp.freqs <- sum(obs.freqs) * exp.percs
sum(((obs.freqs - exp.freqs)^2)/exp.freqs)
}
possible.outcomes <- xsimplex(length(obs.freqs), sum(obs.freqs))
possible.outcome.probs <- apply(possible.outcomes, 2, dmnom, prob=exp.percs)
possible.outcome.chis <- apply(possible.outcomes, 2, cst, exp.percs=exp.percs)
output <- sum(possible.outcome.probs[possible.outcome.chis >= cst(obs.freqs, exp.percs)])
names(output) <- "p_multinomial test (based on prob. of occ. more deviating from H0)"
return(output)
}
# create the null hypothesis probabilities for 3 types:
exp.percs <- rep(1/3, 3) # equal distribution
collector <- c() # create a collector structure
for (how.many.tokens in 1:12) { # go through token frequencies from 1 to 12
# create the most extreme distribution possible with
# that many tokens over 3 type slots (N, V, Adj)
obs.freqs <- c(how.many.tokens, 0, 0)
# compute a multinomial test for this distribution
# collect its p-value
collector[how.many.tokens] <- mnt(obs.freqs, exp.percs)
}
# check when it's even possible to get a significant result
min(which(round(collector, 5)<0.05)) # you need minimally 4 tokens
rm(list = ls(all.names = TRUE))
require(combinat)
chi_squared_test <- function(obs.freqs, exp.percs) {
exp.freqs <- sum(obs.freqs) * exp.percs
sum( ( (obs.freqs - exp.freqs) ^ 2) / exp.freqs)
}
multinomial_test <- function (obs.freqs, exp.percs) {
possible.outcomes      <- xsimplex(length(obs.freqs), sum(obs.freqs))
possible.outcome.probs <- apply(possible.outcomes, 2, dmnom, prob = exp.percs)
possible.outcome.chis  <- apply(possible.outcomes, 2, chi_squared_test, exp.percs = exp.percs)
output <- sum(possible.outcome.probs[possible.outcome.chis >= chi_squared_test(obs.freqs, exp.percs)])
names(output) <- "p_multinomial test (based on prob. of occ. more deviating from H0)"
return(output)
}
# create the null hypothesis probabilities for 3 types:
exp.percs <- rep(1 / 3, 3) # equal distribution
collector <- c() # create a collector structure
# go through token frequencies from 1 to 12
for (num_tokens in 1:12) {
# create the most extreme distribution possible with
# that many tokens over 3 type slots (N, V, Adj)
obs.freqs <- c(num_tokens, 0, 0)
# compute a multinomial test for this distribution
# collect its p-value
collector[num_tokens] <- multinomial_test(obs.freqs, exp.percs)
}
# check when it's even possible to get a significant result
min(which(round(collector, 5) < 0.05)) # you need minimally 4 tokens
