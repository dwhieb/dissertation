data <- data.frame(
ref       = c(1),
pred      = c(1),
mod       = c(1),
frequency = c(3),
entropy   = c(1)
)
log3 <- log(3)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log(percentages)) / log3)
}
# frequency loop
for (f in 1:20) {
# observations loop
for (o in 1:100) {
values <- runif(f)
observations <- cut(
values,
breaks = c(0, 0.333, 0.666, 1),
include.lowest = TRUE,
labels = c("ref", "pred", "mod")
)
counts  <- data.frame(table(observations))
entropy <- calculate_entropy(1 + counts$Freq)
lexeme  <- c(counts$Freq, f, entropy)
data    <- rbind(data, lexeme)
}
}
par(mfrow = c(1, 2))
plot(data$frequency ~ data$entropy)
data <- data.frame(
ref       = c(1),
pred      = c(1),
mod       = c(1),
frequency = c(3),
entropy   = c(1)
)
log3 <- log(3)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log(percentages)) / log3)
}
# frequency loop
for (f in 1:5) {
# observations loop
for (o in 1:100) {
values <- runif(f)
observations <- cut(
values,
breaks = c(0, 0.333, 0.666, 1),
include.lowest = TRUE,
labels = c("ref", "pred", "mod")
)
counts  <- data.frame(table(observations))
entropy <- calculate_entropy(1 + counts$Freq)
lexeme  <- c(counts$Freq, f, entropy)
data    <- rbind(data, lexeme)
}
}
par(mfrow = c(1, 2))
plot(data$frequency ~ data$entropy)
data <- data.frame(
ref       = c(1),
pred      = c(1),
mod       = c(1),
frequency = c(3),
entropy   = c(1)
)
log3 <- log(3)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log(percentages)) / log3)
}
# frequency loop
for (f in 1:20) {
# observations loop
for (o in 1:100) {
values <- runif(f)
observations <- cut(
values,
breaks = c(0, 0.333, 0.666, 1),
include.lowest = TRUE,
labels = c("ref", "pred", "mod")
)
counts  <- data.frame(table(observations))
entropy <- calculate_entropy(1 + counts$Freq)
lexeme  <- c(counts$Freq, f, entropy)
data    <- rbind(data, lexeme)
}
}
par(mfrow = c(1, 2))
plot(data$frequency ~ data$entropy)
par(mfrow = c(1, 1))
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log(percentages)) / log3)
}
read.csv(file_path)
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log(percentages)) / log3)
}
data <- read.csv(file_path)
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log(percentages)) / log3)
}
data <- read.csv(file_path)
View(data)
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log(percentages)) / log3)
}
data <- read.csv(
file_path,
header = TRUE
)
View(data)
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log(percentages)) / log3)
}
data <- read.csv(
file_path,
header = TRUE
)
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log(percentages)) / log3)
}
data <- read.csv(
file_path,
header = TRUE
)
data$entropy <- sapply(c(data$ref, data$pred, data$mod), calculate_entropy)
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log(percentages)) / log3)
}
data <- read.csv(
file_path,
header = TRUE
)
data$entropy <- calculate_entropy(c(data$ref, data$pred, data$mod))
View(data)
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
calculate_entropy <- function(values) {
print(values)
percentages <- values / sum(values)
return(-sum(percentages * log(percentages)) / log3)
}
data <- read.csv(
file_path,
header = TRUE
)
data$entropy <- calculate_entropy(c(data$ref, data$pred, data$mod))
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log(percentages)) / log3)
}
data <- read.csv(
file_path,
header = TRUE
)
for (i in 1:length(data$freq)) {
data$entropy[i] = calculate_entropy(c(data$ref, data$pred, data$mod))
}
View(data)
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log(percentages)) / log3)
}
data <- read.csv(
file_path,
header = TRUE
)
for (i in 1:length(data$freq)) {
data$entropy[i] = calculate_entropy(c(data$ref[i], data$pred[i], data$mod[i]))
}
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
log_with_0 <- function(x) {
return(ifelse(x == 0, 0, log(x)))
}
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log_with_0(percentages)) / log3)
}
data <- read.csv(
file_path,
header = TRUE
)
for (i in 1:length(data$freq)) {
data$entropy[i] = calculate_entropy(c(data$ref[i], data$pred[i], data$mod[i]))
}
View(data)
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
log_with_0 <- function(x) {
return(ifelse(x == 0, 0, log(x)))
}
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log_with_0(percentages)) / log3)
}
data <- read.csv(
file_path,
header = TRUE
)
for (i in 1:length(data$freq)) {
data$entropy[i] = calculate_entropy(c(data$ref[i], data$pred[i], data$mod[i]))
}
write.table(data, "stats/tests/simulated_entropy.csv")
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
log_with_0 <- function(x) {
return(ifelse(x == 0, 0, log(x)))
}
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log_with_0(percentages)) / log3)
}
data <- read.csv(
file_path,
header = TRUE
)
for (i in 1:length(data$freq)) {
data$entropy[i] = calculate_entropy(c(data$ref[i], data$pred[i], data$mod[i]))
}
write.csv(data, "stats/tests/simulated_entropy.csv")
file_path <- "stats/tests/simulated.csv"
log3      <- log(3)
log_with_0 <- function(x) {
return(ifelse(x == 0, 0, log(x)))
}
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log_with_0(percentages)) / log3)
}
data <- read.csv(
file_path,
header = TRUE
)
for (i in 1:length(data$freq)) {
data$entropy[i] = calculate_entropy(c(data$ref[i], data$pred[i], data$mod[i]))
}
write.csv(
data,
"stats/tests/simulated_entropy.csv",
row.names = FALSE
)
file_path <- "stats/tests/simulated_entropy.csv"
data <- read.csv(
file_path,
header = TRUE
)
hist(data$entropy)
file_path <- "stats/tests/simulated_entropy.csv"
data <- read.csv(
file_path,
header = TRUE
)
plot(data$freq ~ data$entropy)
file_path <- "stats/simulation/simulated_entropy.csv"
data <- read.csv(
file_path,
header = TRUE
)
plot(data$freq ~ data$entropy)
library(ggplot)
file_path <- "stats/simulation/simulated_entropy.csv"
data <- read.csv(
file_path,
header = TRUE
)
ggplot(data)
+ geom_point()
library(ggplot2)
file_path <- "stats/simulation/simulated_entropy.csv"
data <- read.csv(
file_path,
header = TRUE
)
ggplot(data)
+ geom_point()
library(ggplot2)
file_path <- "stats/simulation/simulated_entropy.csv"
data <- read.csv(
file_path,
header = TRUE
)
ggplot(data)
+ geom_point()
library(ggplot2)
data_path <- "stats/simulation/simulated_entropy.csv"
plot_path <- "stats/simulation/simulation.png"
data <- read.csv(
file_path,
header = TRUE
)
ggplot(data)
+ geom_point()
library(ggplot2)
data_path <- "stats/simulation/simulated_entropy.csv"
plot_path <- "stats/simulation/simulation.png"
data <- read.csv(
file_path,
header = TRUE
)
ggplot(data) +
geom_point()
library(ggplot2)
data_path <- "stats/simulation/simulated_entropy.csv"
plot_path <- "stats/simulation/simulation.png"
data <- read.csv(
file_path,
header = TRUE
)
ggplot(data, aes(
x = entropy,
y = freq
)) +
geom_point()
library(ggplot2)
data_path <- "stats/simulation/simulated_entropy.csv"
plot_path <- "stats/simulation/simulation.png"
data <- read.csv(
file_path,
header = TRUE
)
ggplot(data, aes(
x = entropy,
y = freq
)) +
theme_minimal() +
geom_point()
library(ggplot2)
data_path <- "stats/simulation/simulated_entropy.csv"
plot_path <- "stats/simulation/simulation.png"
data <- read.csv(
file_path,
header = TRUE
)
ggplot(data, aes(
x = entropy,
y = freq
)) +
xlab("flexibility (entropy)") +
ylab("frequency") +
theme_minimal() +
geom_point()
library(ggplot2)
data_path <- "stats/simulation/simulated_entropy.csv"
plot_path <- "stats/simulation/simulation.png"
data <- read.csv(
file_path,
header = TRUE
)
ggplot(data, aes(
x = entropy,
y = freq
)) +
xlab("flexibility (entropy)") +
ylab("frequency") +
theme_minimal() +
geom_point() +
xlim(0, 1)
print(calculate_entropy(c(99, 1, 0)))
print(calculate_entropy(c(98, 1, 1)))
print(calculate_entropy(c(100, 0, 0)))
print(calculate_entropy(c(249, 1, 0)))
print(calculate_entropy(c(199, 1, 0)))
print(calculate_entropy(c(149, 1, 0)))
print(calculate_entropy(c(99, 1, 0)))
print(calculate_entropy(c(98, 1, 0)))
print(calculate_entropy(c(100, 1, 0)))
print(calculate_entropy(c(101, 1, 0)))
print(calculate_entropy(c(105, 1, 0)))
print(calculate_entropy(c(104, 1, 0)))
print(calculate_entropy(c(103, 1, 0)))
print(calculate_entropy(c(102, 1, 0)))
library(ggplot2)
data_path <- "stats/simulation/simulated_entropy.csv"
plot_path <- "stats/simulation/simulation.png"
data <- read.csv(
file_path,
header = TRUE
)
# entropy cannot get below 0.05 until frequency >= 102
print(calculate_entropy(c(102, 1, 0)))
ggplot(data, aes(
x = entropy,
y = freq
)) +
xlab("flexibility (entropy)") +
ylab("frequency") +
theme_minimal() +
geom_point() +
xlim(0, 1)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log_with_0(percentages)) / log3)
}
library(ggplot2)
data_path <- "stats/simulation/simulated_entropy.csv"
plot_path <- "stats/simulation/simulation.png"
data <- read.csv(
file_path,
header = TRUE
)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log_with_0(percentages)) / log3)
}
# entropy cannot get below 0.05 until frequency >= 102
print(calculate_entropy(c(102, 1, 0)))
plot <- ggplot(data, aes(
x = entropy,
y = freq
)) +
xlab("flexibility (entropy)") +
ylab("frequency") +
theme_minimal() +
geom_point() +
xlim(0, 1)
ggsave(
plot_path,
plot
)
?entropy
library(ggplot2)
data_path <- "stats/simulation/simulated_entropy.csv"
plot_path <- "stats/simulation/simulation.png"
data <- read.csv(
file_path,
header = TRUE
)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log_with_0(percentages)) / log3)
}
# entropy cannot get below 0.05 until frequency >= 102
print(calculate_entropy(c(102, 1, 0)))
plot <- ggplot(data, aes(
x = entropy,
y = freq
)) +
xlab("flexibility (entropy)") +
ylab("frequency") +
theme_minimal() +
geom_point() +
xlim(0, 1)
hist(data$entropy)
ggsave(
plot_path,
plot
)
hist(data$entropy)
library(ggplot2)
data_path <- "stats/simulation/simulated_entropy.csv"
plot_path <- "stats/simulation/simulation.png"
data <- read.csv(
file_path,
header = TRUE
)
library(ggplot2)
data_path <- "stats/simulation/simulated_entropy.csv"
plot_path <- "stats/simulation/simulation.png"
data <- read.csv(
data_path,
header = TRUE
)
calculate_entropy <- function(values) {
percentages <- values / sum(values)
return(-sum(percentages * log_with_0(percentages)) / log3)
}
# entropy cannot get below 0.05 until frequency >= 102
print(calculate_entropy(c(102, 1, 0)))
plot <- ggplot(data, aes(
x = entropy,
y = freq
)) +
xlab("flexibility (entropy)") +
ylab("frequency") +
theme_minimal() +
geom_point() +
xlim(0, 1)
ggsave(
plot_path,
plot
)
hist(data$entropy)
