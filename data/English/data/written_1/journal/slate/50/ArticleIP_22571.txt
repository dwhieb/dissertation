
   
   
      
         
             Geek_NNP Love_NNP

            Linux_NNP will_MD change_VB the_DT
world_NN ._. Linux_NNP will_MD do_VB my_PRP$ homework_NN ,_, my_PRP$ dishes_NNS ,_, my_PRP$ laundry_NN ._. The_DT hype_NN reminds_VBZ me_PRP of_IN
similar_JJ hype_NN a_DT couple_NN of_IN years_NNS ago_RB about_IN Java_NNP ,_, which_WDT never_RB did_VBD floss_NNS my_PRP$ teeth_NNS ._.
But_CC ,_, setting_VBG out_IN to_TO demystify_NN Linux_NNP ,_, I_PRP fell_VBD in_IN love_NN ._. Geek_NNP love_NN ,_, I_PRP hasten_VB to_TO
add_VB ._. It_PRP 's_VBZ not_RB for_IN everyone_NN ._.

            Unlike_IN Windows_NNP (_( and_CC
IBM_NNP 's_POS OS_NNP /_NN 2_CD and_CC Apple_NNP 's_POS MacOS_NNP )_) Linux_NNP was_VBD written_VBN by_IN a_DT person_NN ,_, not_RB a_DT faceless_JJ
monolith_NN like_IN the_DT company_NN I_PRP work_VBP for_IN ._. This_DT person_NN was_VBD Linus_NNP Torvalds_NNP ._. Linux_NNP is_VBZ
also_RB different_JJ because_IN it_PRP is_VBZ based_VBN on_IN the_DT founding_NN principles_NNS and_CC software_NN of_IN
the_DT Free_NNP Software_NNP Foundation_NNP ,_, whose_WP$ name_NN describes_VBZ its_PRP$ mission_NN ._. Linux_NNP is_VBZ
derived_VBN from_IN an_DT operating_VBG system_NN developed_VBN by_IN FSF_NNP called_VBD GNU_NNP ._. The_DT proper_JJ name_NN
for_IN Linux_NNP is_VBZ GNU_NNP /_NN Linux_NNP ._. GNU_NNP is_VBZ a_DT variation_NN on_IN the_DT Unix_NNP operating_VBG system_NN and_CC the_DT
acronym_NN GNU_NNP stands--disconcertingly--for_JJ "_'' GNU_NNP 's_POS not_RB Unix_NNP ._. "_'' Are_VBP you_PRP still_RB with_IN
me_PRP ?_.

            The_DT FSF_NNP crew_NN preaches_NNS that_IN all_DT software_NN should_MD be_VB "_'' Open_NNP
Source_NNP ,_, "_'' by_IN which_WDT they_PRP mean_VBP that_IN any_DT user_NN should_MD be_VB able_JJ to_TO view_VB and_CC change_VB the_DT
underlying_VBG code_NN ,_, be_VB it_PRP for_IN the_DT operating_VBG system_NN or_CC for_IN applications_NNS ._.
(_( Microsoft_NNP ,_, Apple_NNP ,_, and_CC other_JJ companies_NNS consider_VBP their_PRP$ code_NN top_JJ secret_NN ._. )_) Open_JJ
sourcers_NNS also_RB advocate_VBP free_JJ distribution_NN of_IN software_NN ._. To_TO the_DT FSF_NNP the_DT issues_NNS of_IN
free_JJ software_NN are_VBP at_IN the_DT very_JJ foundation_NN of_IN creating_VBG a_DT "_'' cooperative_JJ society_NN ._. "_'' I_PRP
am_VBP a_DT wee_NN bit_NN skeptical_JJ ._. I_PRP enjoy_VBP getting_VBG paid_VBN to_TO write_VB software_NN ,_, and_CC I_PRP suspect_VBP
that_IN many_JJ ,_, if_IN not_RB most_JJS ,_, Linux_NNP enthusiasts_NNS are_VBP being_VBG paid_VBN by_IN someone_NN to_TO write_VB
software_NN ._. It_PRP 's_VBZ nice_JJ that_IN they_PRP can_MD play_VB with_IN Linux_NNP for_IN free_JJ ,_, but_CC if_IN all_DT software_NN
were_VBD free_JJ ,_, how_WRB would_MD they_PRP eat_VB ?_.

            When_WRB pushed_VBN ,_, the_DT Free_NNP
Software_NNP Foundation_NNP defines_VBZ "_'' free_JJ "_'' as_IN a_DT matter_NN of_IN liberty_NN ,_, not_RB of_IN price_NN ._. Many_JJ
people_NNS pay_VBP for_IN GNU_NNP /_NN Linux_NNP ,_, but_CC the_DT underlying_VBG mechanics_NNS are_VBP freely_RB available_JJ to_TO
anyone_NN who_WP wants_VBZ them_PRP ._. Companies_NNS that_WDT sell_VBP Linux_NNP offer_NN the_DT support_NN and_CC
maintenance_NN that_IN people_NNS have_VBP come_VBN to_TO expect--and_JJ charge_NN for_IN them_PRP ._.

            But_CC software_NN development_NN religions_NNS aside_RB ,_, what_WP is_VBZ an_DT
operating_VBG system_NN like_IN Linux_NNP doing_VBG ?_. As_IN the_DT name_NN suggests_VBZ ,_, it_PRP controls_VBZ the_DT
fundamental_JJ operation_NN of_IN your_PRP$ computer_NN :_: things_NNS like_IN how_WRB to_TO read_VB documents_NNS from_IN
a_DT disk_NN and_CC send_VB them_PRP to_TO a_DT printer_NN ._. As_IN you_PRP may_MD have_VB heard_VBN ,_, the_DT demarcation_NN of_IN
what_WP is_VBZ and_CC is_VBZ n't_RB "_'' in_IN the_DT operating_VBG system_NN "_'' can_MD be_VB a_DT touchy_JJ question_NN ._. Some_DT
companies_NNS maintain_VBP that_IN an_DT operating_VBG system_NN contains_VBZ any_DT goddamn_NN thing_NN they_PRP
want_VBP to_TO put_VB in_IN it_PRP ,_, thank_VB you_PRP very_RB much_RB ._. Other_JJ folks_NNS say_VBP that_IN an_DT operating_VBG
system_NN is_VBZ just_RB the_DT core_NN functionality_NN (_( or_CC in_IN computer_NN parlance_NN ,_, the_DT kernel_NN )_)
necessary_JJ to_TO run_VB the_DT chips_NNS in_IN your_PRP$ machine_NN ._.

            Linux_NNP is_VBZ definitely_RB the_DT
second_JJ model_NN ._. When_WRB you_PRP turn_VBP on_RP a_DT computer_NN using_VBG Linux_NNP you_PRP get_VBP no_DT bells_NNS ,_,
whistles_NNS ,_, or_CC windows_NNS ._. You_PRP just_RB see_VBP some_DT lines_NNS of_IN text_NN and_CC then_RB a_DT blinking_RB
cursor_NN ._. So_RB are_VBP we_PRP just_RB back_RB to_TO DOS_NNP ?_. Well_RB ,_, no_DT :_: You_PRP can_MD add_VB a_DT graphical_JJ interface_NN
known_VBN as_IN Xwindows_NNP ,_, which_WDT looks_VBZ amazingly_RB like_IN Windows_NNP ,_, complete_JJ with_IN a_DT Start_NNP
button_NN ._. Once_RB you_PRP start_VBP Xwindows_NNP ,_, you_PRP 're_VBP back_RB in_IN familiar_JJ territory_NN ._. You_PRP can_MD use_VB
your_PRP$ mouse_NN to_TO open_JJ documents_NNS and_CC applications_NNS (_( such_JJ as_IN WordPerfect_NNP )_) ._. I_PRP even_RB ran_VBD
a_DT Web_NNP browser_NN ._. A_DT big_JJ practical_JJ disadvantage_NN of_IN Linux_NNP is_VBZ that_IN there_EX is_VBZ n't_RB much_JJ
application_NN software_NN for_IN it_PRP ._. But_CC that_DT 's_VBZ because_IN so_RB few_JJ people_NNS use_VBP it_PRP ._. It_PRP
would_MD n't_RB be_VB fair_JJ to_TO count_VB this_DT as_IN a_DT negative_NN in_IN weighing_VBG Linux_NNP 's_POS intrinsic_JJ
merits_NNS ._. And_CC so_RB ,_, of_IN course_NN ,_, I_PRP wo_MD n't_RB ._.

            To_TO begin_VB my_PRP$ experiment_NN I_PRP had_VBD to_TO get_VB a_DT machine_NN running_VBG
Linux_NNP ._. So_IN I_PRP started_VBD searching_VBG the_DT Web_NNP for_IN information_NN ._. After_IN getting_VBG lost_VBN on_IN a_DT
few_JJ Web_NNP sites_NNS ,_, I_PRP completely_RB wimped_JJ out_IN and_CC went_VBD to_TO Barnes_NNP &_CC Noble_NNP ._. The_DT
software_NN may_MD be_VB free_JJ ,_, but_CC there_EX 's_VBZ big_JJ money_NN in_IN books_NNS on_IN how_WRB to_TO use_VB it_PRP ._. I_PRP made_VBD a_DT
scientific_JJ decision_NN based_VBN on_IN weight_NN and_CC purchased_VBN Red_NNP Hat_NNP Linux_NNP Secrets_NNP
for_IN $_$ 39_CD ._. 95_CD ,_, which_WDT included_VBD Red_NNP Hat_NNP software_NN 's_POS 5_CD ._. 1_CD version_NN of_IN Linux_NNP on_IN a_DT
CD-ROM_NN ._.

            Back_RB at_IN the_DT office_NN I_PRP did_VBD
the_DT hard_JJ stuff_NN ._. I_PRP hijacked_JJ a_DT Pentium_NNP 133_CD with_IN 32_CD megs_NNS of_IN memory_NN and_CC
repartitioned_JJ its_PRP$ hard_JJ drive_NN into_IN two_CD parts_NNS ._. "_'' Repartitioned_NNP "_'' is_VBZ a_DT fancy_JJ way_NN of_IN
saying_VBG "_'' divided_VBN ._. "_'' Thus_RB ,_, instead_RB of_IN one_CD big_JJ hard_JJ drive_NN I_PRP now_RB have_VBP two_CD little_JJ
ones_NNS using_VBG the_DT same_JJ physical_JJ disk_NN ._. Linux_NNP has_VBZ a_DT utility_NN program_NN that_WDT helped_VBD me_PRP
do_VBP this_DT (_( because_IN it_PRP knows_VBZ you_PRP 're_VBP going_VBG to_TO want_VB to_TO keep_VB running_VBG Windows_NNP too_RB )_) ._. It_PRP
did_VBD involve_VB some_DT complicated_VBN thinking_VBG about_IN disk_NN cylinders_NNS ,_, but_CC it_PRP worked_VBD ._.

            I_PRP then_RB fruitlessly_RB tried_VBD to_TO get_VB Linux_NNP to_TO boot_NN up_RP ._. First_LS I_PRP
tried_VBD to_TO get_VB it_PRP to_TO load_VB directly_RB from_IN the_DT CD_NNP that_WDT came_VBD with_IN the_DT book_NN ._. Then_RB I_PRP
spent_VBD another_DT hour_NN trying_VBG to_TO get_VB the_DT Linux_NNP boot_NN disk_NN I_PRP had_VBD created_VBN to_TO
acknowledge_VB the_DT existence_NN of_IN the_DT CD_NNP drive_NN ._. Finally_RB ,_, I_PRP copied_VBD the_DT entire_JJ CD_NNP onto_IN
my_PRP$ hard_JJ drive_NN and_CC started_VBD the_DT install_VB process_NN ._. I_PRP had_VBD to_TO create_VB two_CD more_RBR floppy_JJ
boot_NN disks_NNS ._.

            I_PRP had_VBD to_TO repartition_NN my_PRP$
drive_NN again_RB within_IN Linux_NNP to_TO create_VB swap_NN space_NN for_IN the_DT operating_VBG system_NN (_( for_IN
those_DT keeping_VBG track_NN I_PRP now_RB have_VBP three_CD partitions_NNS on_IN my_PRP$ hard_JJ drive_NN )_) ._. I_PRP had_VBD to_TO
format_NN both_DT drives_NNS ._. I_PRP then_RB had_VBD to_TO remember_VB where_WRB on_IN my_PRP$ hard_JJ drive_NN I_PRP had_VBD put_VBN the_DT
install_VB files_NNS ._. Then_RB it_PRP got_VBD started_VBN ._. Linux_NNP found_VBD my_PRP$ various_JJ devices_NNS ,_, such_JJ as_IN my_PRP$
mouse_NN and_CC graphics_NNS card_NN ._. It_PRP configured_JJ both_DT relatively_RB painlessly_RB ._. It_PRP was_VBD n't_RB
complete_JJ plug_NN and_CC pray_NN ._. I_PRP still_RB had_VBD to_TO select_VB my_PRP$ items_NNS from_IN lists_NNS ,_, and_CC it_PRP was_VBD
good_JJ that_IN I_PRP generally_RB knew_VBD what_WP types_NNS of_IN hardware_NN I_PRP was_VBD running_VBG ,_, but_CC it_PRP worked_VBD ._.
Finally_RB I_PRP got_VBD a_DT blinking_RB cursor_NN at_IN the_DT Linux_NNP prompt_VB ._. I_PRP then_RB launched_VBD Xwindows_NNP ._.
To_TO complete_VB the_DT setup_NN ,_, I_PRP got_VBD the_DT browser_NN configured_JJ and_CC read_VB

                  Slate_NNP
               !_. After_IN installing_VBG Corel_NNP 's_POS WordPerfect_NNP I_PRP was_VBD even_RB able_JJ to_TO
write_VB this_DT column_NN on_IN Linux_NNP in_IN Linux_NNP ._. (_( Lexicographical_NNP curiosity_NN :_: The_DT word_NN Linux_NNP
is_VBZ in_IN the_DT WordPerfect_NNP spell-check_JJ dictionary_JJ but_CC not_RB in_IN Microsoft_NNP Word_NNP 's_POS ._. )_)

            After_IN spending_VBG a_DT day_NN with_IN Linux_NNP ,_, I_PRP concluded_VBD that_IN it_PRP runs_VBZ
great_JJ ._. It_PRP helped_VBD that_IN I_PRP know_VBP Unix_NNP ,_, but_CC the_DT system_NN does_VBZ work_NN ._. I_PRP have_VBP basic_JJ Web_NNP
browsing_VBG capabilities_NNS and_CC a_DT word_NN processor_NN ._. I_PRP also_RB configured_JJ and_CC set_VBN up_RP the_DT
Web_NNP server_NN ,_, so_IN I_PRP could_MD ,_, in_IN theory_NN ,_, power_NN all_DT of_IN 
                  Slate_NNP
                off_IN this_DT
machine_NN ._. In_IN fact_NN ,_, Linux_NNP is_VBZ definitely_RB cool_VB as_IN a_DT server_NN ._. But_CC if_IN you_PRP want_VBP to_TO
replace_VB your_PRP$ desktop_NN machine_NN ,_, forget_VB it_PRP ._.

            What_WP makes_VBZ Linux_NNP
enthralling_VBG from_IN a_DT tech-head_JJ 's_POS point_NN of_IN view_NN is_VBZ that_IN it_PRP is_VBZ based_VBN on_IN Unix_NNP
standards_NNS that_WDT have_VBP been_VBN around_IN for_IN decades_NNS ._. Companies_NNS from_IN AT_NNP &_CC T_NN to_TO Sun_NNP
Microsystems_NNPS to_TO Apple_NNP to_TO IBM_NNP to_TO Silicon_NNP Graphics_NNP have_VBP produced_VBN varieties_NNS of_IN
Unix_NNP for_IN their_PRP$ business_NN customers_NNS ._. While_IN these_DT varieties_NNS are_VBP generally_RB
incompatible_JJ with_IN one_CD another_DT ,_, all_PDT this_DT code-writing_JJ has_VBZ resulted_VBN in_IN a_DT
far-flung_JJ community_NN that_WDT understands_VBZ the_DT Unix_NNP beast_NN ._. Linux_NNP developers_NNS stand_VBP on_IN
the_DT shoulders_NNS of_IN these_DT giants_NNS ,_, thus_RB Linux_NNP has_VBZ a_DT lot_NN of_IN intrinsic_JJ testing_NN behind_IN
it_PRP ._. That_DT makes_VBZ it_PRP what_WP techies_NNS call_VBP "_'' robust_JJ ,_, "_'' meaning_VBG resistant_JJ to_TO breaking_VBG
down_RB ._. Enthusiasts_NNS claim_VBP that_IN Linux_NNP can_MD run_VB for_IN years_NNS without_IN requiring_VBG you_PRP to_TO
restart_VB your_PRP$ system_NN ._. On_IN my_PRP$ machine_NN I_PRP can_MD claim_VB only_RB a_DT week_NN of_IN running_VBG without_IN
restarting_VBG ,_, but_CC that_DT is_VBZ pretty_RB darn_NN good_JJ ._. It_PRP also_RB has_VBZ a_DT solid_JJ multithreading_VBG
and_CC multitasking_VBG model_NN ,_, meaning_VBG that_IN one_CD errant_NN program_NN ca_MD n't_RB bring_VB the_DT whole_JJ
computer_NN to_TO its_PRP$ knees_NNS ._. (_( This_DT is_VBZ a_DT feature_NN Linux_NNP shares_NNS with_IN Windows_NNP NT_NNP ,_, but_CC not_RB
with_IN Windows_NNP 95_CD /_NN 98_CD ._. )_)

            In_IN terms_NNS of_IN performance_NN ,_, Linux_NNP ran_VBD about_IN as_RB quickly_RB as_IN
Windows_NNP 95_CD /_NN 98_CD (_( though_IN much_JJ faster_RBR than_IN Windows_NNP NT_NNP Server_NNP )_) on_IN my_PRP$ low-end_JJ Pentium_NNP
machine_NN ._. For_IN a_DT completely_RB unscientific_JJ example_NN ,_, there_EX was_VBD little_JJ difference_NN in_IN
basic_JJ file_NN operations_NNS such_JJ as_IN copying_NN and_CC pasting_VBG ,_, and_CC WordPerfect_NNP ran_VBD just_RB as_RB
fast_RB as_IN it_PRP did_VBD on_IN a_DT comparable_JJ Windows_NNP machine_NN ._.

            Should_MD you_PRP switch_VB to_TO
Linux_NNP ?_. In_IN my_PRP$ opinion_NN ,_, if_IN you_PRP are_VBP a_DT typical_JJ computer_NN user_NN ,_, there_EX is_VBZ no_DT practical_JJ
reason_NN to_TO do_VB so_RB ._. The_DT best_JJS reason_NN is_VBZ psychological_JJ ._. Linux_NNP is_VBZ a_DT workable_JJ
alternative_NN to_TO Windows_NNP ,_, and_CC thus_RB it_PRP allows_VBZ you_PRP to_TO vote_VB with_IN your_PRP$ PC_NN ._. If_IN you_PRP
hate_VBP Microsoft_NNP ,_, you_PRP can_MD use_VB Linux_NNP ._. It_PRP has_VBZ all_PDT the_DT basics_NNS necessary_JJ to_TO get_VB you_PRP
through_IN your_PRP$ computing_NN life_NN ,_, if_IN you_PRP are_VBP willing_JJ to_TO ignore_VB some_DT rough_JJ edges_NNS here_RB
and_CC there_RB ._. For_IN instance_NN ,_, you_PRP wo_MD n't_RB have_VB much_JJ trouble_NN importing_VBG data_NNS from_IN word_NN
processing_NN and_CC spreadsheet_NN files_NNS ._. But_CC if_IN you_PRP crave_VBP a_DT huge_JJ variety_NN of_IN software_NN
application--games_JJ ,_, personal_JJ information_NN managers_NNS ,_, graphics_NNS programs_NNS ,_, financial_JJ
software_NN ,_, reference_NN works--you_JJ 'd_MD be_VB better_JJR off_RP buying_VBG a_DT Mac_NNP or_CC a_DT Windows_NNP PC_NNP ._.
Some_DT experts_NNS predict_VBP that_IN the_DT dawning_VBG of_IN the_DT Web_NNP means_VBZ that_IN your_PRP$ operating_VBG
system_NN may_MD be_VB less_JJR and_CC less_RBR important_JJ anyway_RB ._. Many_JJ of_IN you_PRP have_VBP used_VBN Linux_NNP and_CC
do_VBP n't_RB even_RB know_VB it_PRP ,_, because_IN many_JJ of_IN the_DT Web_NNP sites_NNS you_PRP frequent_JJ to_TO check_VB the_DT
weather_NN or_CC buy_VB airplane_NN tickets_NNS are_VBP powered_VBN by_IN Linux_NNP ._.

            Now_RB I_PRP must_MD confess_NNS my_PRP$ doubts_NNS about_IN the_DT Open_NNP Source_NNP
movement_NN ._. Do_VBP all_PDT those_DT software_NN developers_NNS writing_VBG open_JJ source_NN code_NN for_IN Linux_NNP
have_VBP the_DT incentive_NN to_TO fix_VB problems_NNS as_IN they_PRP arise_VBP and--more_JJ important--to_JJ help_NN
people_NNS upgrade_JJ and_CC keep_VB old_JJ code_NN running_NN ?_. Perhaps_RB the_DT greatest_JJS technological_JJ
feature_NN that_IN Windows_NNP possesses_VBZ is_VBZ that_IN it_PRP can_MD handle_VB programs_NNS as_RB old_JJ as_IN the_DT
first_JJ DOS_NNP applications_NNS ._. Linux_NNP will_MD never_RB do_VB that_DT ._.

            Some_DT critics_NNS say_VBP that_IN
Linux_NNP will_MD fracture_NN into_IN a_DT dozen_NN different_JJ incompatible_JJ versions_NNS ,_, just_RB as_IN Unix_NNP
did_VBD ._. Linux_NNP champions_NNS insists_VBZ that_IN the_DT community_NN will_MD prevent_VB such_PDT a_DT Tower_NNP of_IN
Babel_NNP disaster_NN ._. I_PRP suspect_VBP that_IN a_DT schism_NN will_MD eventually_RB divide_VB the_DT happy_JJ Linux_NNP
community_NN ,_, as_RB equally_RB creative_JJ innovators_NNS disagree_VBP on_IN the_DT operating_VBG system_NN 's_POS
future_NN ._.

            Furthermore_RB ,_, as_IN in_IN 
                  Slate_NNP
               ,_, software_NN companies_NNS
spend_VBP a_DT surprising_JJ fraction_NN of_IN their_PRP$ resources_NNS testing_NN software_NN ,_, not_RB writing_VBG
it_PRP ._. In_IN my_PRP$ experience_NN ,_, this_DT is_VBZ the_DT ultimate_JJ problem_NN with_IN Open_NNP Source_NNP
development_NN :_: not_RB enough_RB formal_JJ engaged_VBN testing_NN ._. Developers_NNS want_VBP to_TO write_VB code_NN ,_,
they_PRP do_VBP n't_RB want_VB to_TO solve_VB all_DT the_DT niggling_VBG little_JJ problems_NNS that_IN users_NNS come_VBP up_RB
with_IN ._.

            But_CC if_IN the_DT thought_NN of_IN a_DT free_JJ operating_NN system_NN is_VBZ so_RB
exciting_JJ that_IN you_PRP 're_VBP willing_JJ to_TO pay_VB $_$ 39_CD ._. 95_CD and_CC invest_VB hours_NNS for_IN the_DT privilege_NN ,_,
by_IN all_DT means_VBZ give_VB Linux_NNP a_DT try_NN ._.

         
      
   
